"use client";

import { useState, useEffect } from "react";

interface HintBubbleProps {
  questionIndex: number;
  category: string;
}

const HINT_KEY_PREFIX = "aiHumanGame_hint_";

export default function HintBubble({ questionIndex, category }: HintBubbleProps) {
  const [show, setShow] = useState(false);
  const [hint, setHint] = useState("");

  useEffect(() => {
    // Ê£ÄÊü•ÊòØÂê¶Â∫îËØ•ÊòæÁ§∫ÊèêÁ§∫
    const hintKey = `${HINT_KEY_PREFIX}${category}_${questionIndex}`;
    
    if (typeof window !== "undefined") {
      const hasSeenHint = localStorage.getItem(hintKey);
      
      if (!hasSeenHint) {
        // Ê†πÊçÆÈ¢òÂè∑ÊòæÁ§∫‰∏çÂêåÁöÑÊèêÁ§∫
        if (questionIndex === 0) {
          setHint("üí° ÊèêÁ§∫Ôºö‰ªîÁªÜÊØîËæÉ‰∏§‰æßÂÜÖÂÆπÁöÑÁªÜËäÇÔºåÈÄâÊã©‰Ω†ËÆ§‰∏∫ÊòØ‰∫∫Á±ªÂàõ‰ΩúÁöÑÈÇ£‰∏Ä‰æßÔºÅ");
          setShow(true);
        } else if (questionIndex === 2) {
          setHint("üìä ÊèêÁ§∫Ôºö‰Ω†ÂèØ‰ª•ÈöèÊó∂ËøîÂõûÂàÜÁ±ªÈ°µÈù¢ÈÄâÊã©ÂÖ∂‰ªñÂàÜÁ±ªÔºåËøõÂ∫¶‰ºöËá™Âä®‰øùÂ≠òÔºÅ");
          setShow(true);
        } else if (questionIndex === 5) {
          setHint("üéØ ÊèêÁ§∫ÔºöÂ∑≤ÁªèÂÆåÊàê‰∏ÄÂçä‰∫ÜÔºÅÁªßÁª≠Âä†Ê≤πÔºÅ");
          setShow(true);
        }
      }
    }
  }, [questionIndex, category]);

  const handleClose = () => {
    // ‰øùÂ≠òÂ∑≤ËØªÊ†áËÆ∞
    const hintKey = `${HINT_KEY_PREFIX}${category}_${questionIndex}`;
    if (typeof window !== "undefined") {
      localStorage.setItem(hintKey, "true");
    }
    setShow(false);
  };

  if (!show || !hint) {
    return null;
  }

  return (
    <div className="fixed top-20 left-1/2 transform -translate-x-1/2 z-40 w-[90%] max-w-md animate-fade-in">
      <div className="nes-balloon from-left pond-theme">
        <div className="flex items-start gap-2">
          <p className="text-xs sm:text-sm flex-1">{hint}</p>
          <button
            onClick={handleClose}
            className="flex-shrink-0 nes-btn is-small"
            title="ÂÖ≥Èó≠ÊèêÁ§∫"
          >
            <i className="nes-icon close is-small"></i>
          </button>
        </div>
      </div>
    </div>
  );
}

